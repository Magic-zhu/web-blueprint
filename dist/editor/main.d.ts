import { Line } from '../base/Line';
import { Node } from '../base/Node';
import { Selector } from './Selector';
import { LogMsg } from './LogMsg';
import { NodeMap } from 'src/gtypes';
export declare class BluePrintEditor {
    container: HTMLElement;
    lineContainer: SVGAElement;
    selector: Selector;
    msgLogger: LogMsg;
    graph: Node[];
    lineGraph: Line[];
    nodeMap: NodeMap;
    private scale;
    private _orginSize;
    private left;
    private top;
    private _mouseDownType;
    private _mouseDownPosition;
    private _translateLast;
    private _transform;
    private currentEventType;
    private currentTarget;
    private beginNode;
    private beginParam;
    private beginType;
    private currentLine;
    onRightClick: Function;
    scaleDisabled: boolean;
    constructor(container: HTMLElement, nodeMap?: NodeMap);
    private init;
    add(node: Node): void;
    addLine(line: Line): void;
    translate(ev: MouseEvent): void;
    private setMouseDownType;
    private recordPosition;
    private initLineContainer;
    private PreNodeHandler;
    private ScaleHandler;
    private NodeMoveHandler;
    private NodeActiveHandler;
    private getScaleOffset;
    private getScaleOffset_T;
    private isLineBegin;
    private handleConnectPointClick;
    private paramPointClickHandler;
    private processPointClickHandler;
    private resetAfterAttachLine;
    private SelectHandler;
    private reviseClientX;
    private reviseClientY;
    save(): any[];
    restore(data: string[]): void;
    clear(): void;
    private getTypeFromSerializationString;
    private getNodeIdFromSerializationString;
    private getBeginPointFromSerializationString;
    private getEndPointFromSerializationString;
    private getIsBeginNodeFromSerializationString;
    private getLineTypeFromSerializationString;
    private getParamIndexFromSerializationString;
    private findTargetIndexByNodeId;
    private reconnectBySerializationString;
}
